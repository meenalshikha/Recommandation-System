import pandas as pd
from sklearn.metrics.pairwise import cosine_similarity

data = {
    'user_id': [1, 1, 1, 2, 2, 2, 3, 3, 4],
    'movie': ['The Matrix', 'Titanic', 'Star Wars', 'The Matrix', 'Titanic', 'Star Wars', 'Star Wars', 'Titanic', 'The Matrix'],
    'rating': [5, 4, 5, 4, 5, 4, 4, 5, 3]
}

df = pd.DataFrame(data)

pivot_table = df.pivot_table(index='user_id', columns='movie', values='rating')

pivot_table = pivot_table.fillna(0)

user_similarity = cosine_similarity(pivot_table)
user_similarity_df = pd.DataFrame(user_similarity, index=pivot_table.index, columns=pivot_table.index)
def recommend_movies(user_id, num_recommendations=3):
   
    similar_users = user_similarity_df[user_id].sort_values(ascending=False)[1:]  # Exclude the user itself
    similar_users = similar_users.head(num_recommendations)
    
    recommended_movies = []
    for similar_user in similar_users.index:
        similar_user_ratings = pivot_table.loc[similar_user]
        for movie, rating in similar_user_ratings.items():
            if rating > 3 and movie not in pivot_table.loc[user_id].index:
                recommended_movies.append(movie)
    
    recommended_movies = list(set(recommended_movies))
    return recommended_movies[:num_recommendations]

user_id = 1
print(f"Recommended movies for user {user_id}: {recommend_movies(user_id)}")
